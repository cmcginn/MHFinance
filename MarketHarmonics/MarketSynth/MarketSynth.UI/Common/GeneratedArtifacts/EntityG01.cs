

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace LightSwitchApplication
{
    #region Entities
    
    /// <summary>
    /// No Modeled Description Available
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
    public sealed partial class MarketData : global::Microsoft.LightSwitch.Framework.Base.EntityObject<global::LightSwitchApplication.MarketData, global::LightSwitchApplication.MarketData.DetailsClass>
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new instance of the MarketData entity.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public MarketData()
            : this(null)
        {
        }
    
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public MarketData(global::Microsoft.LightSwitch.Framework.EntitySet<global::LightSwitchApplication.MarketData> entitySet)
            : base(entitySet)
        {
            global::LightSwitchApplication.MarketData.DetailsClass.Initialize(this);
        }
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void MarketData_Created();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void MarketData_AllowSaveWithErrors(ref bool result);
    
        #endregion
    
        #region Private Properties
        
        /// <summary>
        /// Gets the Application object for this application.  The Application object provides access to active screens, methods to open screens and access to the current user.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::Microsoft.LightSwitch.IApplication<global::LightSwitchApplication.DataWorkspace> Application
        {
            get
            {
                return global::LightSwitchApplication.Application.Current;
            }
        }
        
        /// <summary>
        /// Gets the containing data workspace.  The data workspace provides access to all data sources in the application.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.DataWorkspace DataWorkspace
        {
            get
            {
                return (global::LightSwitchApplication.DataWorkspace)this.Details.EntitySet.Details.DataService.Details.DataWorkspace;
            }
        }
        
        #endregion
    
        #region Public Properties
    
        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Guid Id
        {
            get
            {
                return global::LightSwitchApplication.MarketData.DetailsClass.GetValue(this, global::LightSwitchApplication.MarketData.DetailsClass.PropertySetProperties.Id);
            }
            set
            {
                global::LightSwitchApplication.MarketData.DetailsClass.SetValue(this, global::LightSwitchApplication.MarketData.DetailsClass.PropertySetProperties.Id, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Id_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Id_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Id_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.DateTime MarketDate
        {
            get
            {
                return global::LightSwitchApplication.MarketData.DetailsClass.GetValue(this, global::LightSwitchApplication.MarketData.DetailsClass.PropertySetProperties.MarketDate);
            }
            set
            {
                global::LightSwitchApplication.MarketData.DetailsClass.SetValue(this, global::LightSwitchApplication.MarketData.DetailsClass.PropertySetProperties.MarketDate, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void MarketDate_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void MarketDate_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void MarketDate_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public decimal Open
        {
            get
            {
                return global::LightSwitchApplication.MarketData.DetailsClass.GetValue(this, global::LightSwitchApplication.MarketData.DetailsClass.PropertySetProperties.Open);
            }
            set
            {
                global::LightSwitchApplication.MarketData.DetailsClass.SetValue(this, global::LightSwitchApplication.MarketData.DetailsClass.PropertySetProperties.Open, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Open_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Open_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Open_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public decimal Close
        {
            get
            {
                return global::LightSwitchApplication.MarketData.DetailsClass.GetValue(this, global::LightSwitchApplication.MarketData.DetailsClass.PropertySetProperties.Close);
            }
            set
            {
                global::LightSwitchApplication.MarketData.DetailsClass.SetValue(this, global::LightSwitchApplication.MarketData.DetailsClass.PropertySetProperties.Close, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Close_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Close_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Close_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public decimal High
        {
            get
            {
                return global::LightSwitchApplication.MarketData.DetailsClass.GetValue(this, global::LightSwitchApplication.MarketData.DetailsClass.PropertySetProperties.High);
            }
            set
            {
                global::LightSwitchApplication.MarketData.DetailsClass.SetValue(this, global::LightSwitchApplication.MarketData.DetailsClass.PropertySetProperties.High, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void High_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void High_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void High_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public decimal Low
        {
            get
            {
                return global::LightSwitchApplication.MarketData.DetailsClass.GetValue(this, global::LightSwitchApplication.MarketData.DetailsClass.PropertySetProperties.Low);
            }
            set
            {
                global::LightSwitchApplication.MarketData.DetailsClass.SetValue(this, global::LightSwitchApplication.MarketData.DetailsClass.PropertySetProperties.Low, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Low_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Low_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Low_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public long Volume
        {
            get
            {
                return global::LightSwitchApplication.MarketData.DetailsClass.GetValue(this, global::LightSwitchApplication.MarketData.DetailsClass.PropertySetProperties.Volume);
            }
            set
            {
                global::LightSwitchApplication.MarketData.DetailsClass.SetValue(this, global::LightSwitchApplication.MarketData.DetailsClass.PropertySetProperties.Volume, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Volume_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Volume_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Volume_Changed();

        #endregion
    
        #region Details Class
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public sealed class DetailsClass : global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<
                global::LightSwitchApplication.MarketData,
                global::LightSwitchApplication.MarketData.DetailsClass,
                global::LightSwitchApplication.MarketData.DetailsClass.IImplementation,
                global::LightSwitchApplication.MarketData.DetailsClass.PropertySet,
                global::Microsoft.LightSwitch.Details.Framework.EntityCommandSet<global::LightSwitchApplication.MarketData, global::LightSwitchApplication.MarketData.DetailsClass>,
                global::Microsoft.LightSwitch.Details.Framework.EntityMethodSet<global::LightSwitchApplication.MarketData, global::LightSwitchApplication.MarketData.DetailsClass>>
        {
    
            static DetailsClass()
            {
                var initializeEntry = global::LightSwitchApplication.MarketData.DetailsClass.PropertySetProperties.Id;
            }
    
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<global::LightSwitchApplication.MarketData, global::LightSwitchApplication.MarketData.DetailsClass>.Entry
                __MarketDataEntry = new global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<global::LightSwitchApplication.MarketData, global::LightSwitchApplication.MarketData.DetailsClass>.Entry(
                    global::LightSwitchApplication.MarketData.DetailsClass.__MarketData_CreateNew,
                    global::LightSwitchApplication.MarketData.DetailsClass.__MarketData_Created,
                    global::LightSwitchApplication.MarketData.DetailsClass.__MarketData_AllowSaveWithErrors);
            private static global::LightSwitchApplication.MarketData __MarketData_CreateNew(global::Microsoft.LightSwitch.Framework.EntitySet<global::LightSwitchApplication.MarketData> es)
            {
                return new global::LightSwitchApplication.MarketData(es);
            }
            private static void __MarketData_Created(global::LightSwitchApplication.MarketData e)
            {
                e.MarketData_Created();
            }
            private static bool __MarketData_AllowSaveWithErrors(global::LightSwitchApplication.MarketData e)
            {
                bool result = false;
                e.MarketData_AllowSaveWithErrors(ref result);
                return result;
            }
    
            public DetailsClass() : base()
            {
            }
    
            public new global::Microsoft.LightSwitch.Details.Framework.EntityCommandSet<global::LightSwitchApplication.MarketData, global::LightSwitchApplication.MarketData.DetailsClass> Commands
            {
                get
                {
                    return base.Commands;
                }
            }
    
            public new global::Microsoft.LightSwitch.Details.Framework.EntityMethodSet<global::LightSwitchApplication.MarketData, global::LightSwitchApplication.MarketData.DetailsClass> Methods
            {
                get
                {
                    return base.Methods;
                }
            }
    
            public new global::LightSwitchApplication.MarketData.DetailsClass.PropertySet Properties
            {
                get
                {
                    return base.Properties;
                }
            }
    
            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class PropertySet : global::Microsoft.LightSwitch.Details.Framework.Base.EntityPropertySet<global::LightSwitchApplication.MarketData, global::LightSwitchApplication.MarketData.DetailsClass>
            {
    
                public PropertySet() : base()
                {
                }
    
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.MarketData, global::LightSwitchApplication.MarketData.DetailsClass, global::System.Guid> Id
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.MarketData.DetailsClass.PropertySetProperties.Id) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.MarketData, global::LightSwitchApplication.MarketData.DetailsClass, global::System.Guid>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.MarketData, global::LightSwitchApplication.MarketData.DetailsClass, global::System.DateTime> MarketDate
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.MarketData.DetailsClass.PropertySetProperties.MarketDate) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.MarketData, global::LightSwitchApplication.MarketData.DetailsClass, global::System.DateTime>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.MarketData, global::LightSwitchApplication.MarketData.DetailsClass, decimal> Open
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.MarketData.DetailsClass.PropertySetProperties.Open) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.MarketData, global::LightSwitchApplication.MarketData.DetailsClass, decimal>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.MarketData, global::LightSwitchApplication.MarketData.DetailsClass, decimal> Close
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.MarketData.DetailsClass.PropertySetProperties.Close) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.MarketData, global::LightSwitchApplication.MarketData.DetailsClass, decimal>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.MarketData, global::LightSwitchApplication.MarketData.DetailsClass, decimal> High
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.MarketData.DetailsClass.PropertySetProperties.High) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.MarketData, global::LightSwitchApplication.MarketData.DetailsClass, decimal>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.MarketData, global::LightSwitchApplication.MarketData.DetailsClass, decimal> Low
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.MarketData.DetailsClass.PropertySetProperties.Low) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.MarketData, global::LightSwitchApplication.MarketData.DetailsClass, decimal>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.MarketData, global::LightSwitchApplication.MarketData.DetailsClass, long> Volume
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.MarketData.DetailsClass.PropertySetProperties.Volume) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.MarketData, global::LightSwitchApplication.MarketData.DetailsClass, long>;
                    }
                }
                
            }
    
            #pragma warning disable 109
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
            public interface IImplementation : global::Microsoft.LightSwitch.Internal.IEntityImplementation
            {
                new global::System.Guid Id { get; set; }
                new global::System.DateTime MarketDate { get; set; }
                new decimal Open { get; set; }
                new decimal Close { get; set; }
                new decimal High { get; set; }
                new decimal Low { get; set; }
                new long Volume { get; set; }
            }
            #pragma warning restore 109
    
            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal class PropertySetProperties
            {
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.MarketData, global::LightSwitchApplication.MarketData.DetailsClass, global::System.Guid>.Entry
                    Id = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.MarketData, global::LightSwitchApplication.MarketData.DetailsClass, global::System.Guid>.Entry(
                        "Id",
                        global::LightSwitchApplication.MarketData.DetailsClass.PropertySetProperties._Id_Stub,
                        global::LightSwitchApplication.MarketData.DetailsClass.PropertySetProperties._Id_ComputeIsReadOnly,
                        global::LightSwitchApplication.MarketData.DetailsClass.PropertySetProperties._Id_Validate,
                        global::LightSwitchApplication.MarketData.DetailsClass.PropertySetProperties._Id_GetImplementationValue,
                        global::LightSwitchApplication.MarketData.DetailsClass.PropertySetProperties._Id_SetImplementationValue,
                        global::LightSwitchApplication.MarketData.DetailsClass.PropertySetProperties._Id_OnValueChanged);
                private static void _Id_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.MarketData.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.MarketData, global::LightSwitchApplication.MarketData.DetailsClass, global::System.Guid>.Data> c, global::LightSwitchApplication.MarketData.DetailsClass d, object sf)
                {
                    c(d, ref d._Id, sf);
                }
                private static bool _Id_ComputeIsReadOnly(global::LightSwitchApplication.MarketData e)
                {
                    bool result = false;
                    e.Id_IsReadOnly(ref result);
                    return result;
                }
                private static void _Id_Validate(global::LightSwitchApplication.MarketData e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Id_Validate(r);
                }
                private static global::System.Guid _Id_GetImplementationValue(global::LightSwitchApplication.MarketData.DetailsClass d)
                {
                    return d.ImplementationEntity.Id;
                }
                private static void _Id_SetImplementationValue(global::LightSwitchApplication.MarketData.DetailsClass d, global::System.Guid v)
                {
                    d.ImplementationEntity.Id = v;
                }
                private static void _Id_OnValueChanged(global::LightSwitchApplication.MarketData e)
                {
                    e.Id_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.MarketData, global::LightSwitchApplication.MarketData.DetailsClass, global::System.DateTime>.Entry
                    MarketDate = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.MarketData, global::LightSwitchApplication.MarketData.DetailsClass, global::System.DateTime>.Entry(
                        "MarketDate",
                        global::LightSwitchApplication.MarketData.DetailsClass.PropertySetProperties._MarketDate_Stub,
                        global::LightSwitchApplication.MarketData.DetailsClass.PropertySetProperties._MarketDate_ComputeIsReadOnly,
                        global::LightSwitchApplication.MarketData.DetailsClass.PropertySetProperties._MarketDate_Validate,
                        global::LightSwitchApplication.MarketData.DetailsClass.PropertySetProperties._MarketDate_GetImplementationValue,
                        global::LightSwitchApplication.MarketData.DetailsClass.PropertySetProperties._MarketDate_SetImplementationValue,
                        global::LightSwitchApplication.MarketData.DetailsClass.PropertySetProperties._MarketDate_OnValueChanged);
                private static void _MarketDate_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.MarketData.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.MarketData, global::LightSwitchApplication.MarketData.DetailsClass, global::System.DateTime>.Data> c, global::LightSwitchApplication.MarketData.DetailsClass d, object sf)
                {
                    c(d, ref d._MarketDate, sf);
                }
                private static bool _MarketDate_ComputeIsReadOnly(global::LightSwitchApplication.MarketData e)
                {
                    bool result = false;
                    e.MarketDate_IsReadOnly(ref result);
                    return result;
                }
                private static void _MarketDate_Validate(global::LightSwitchApplication.MarketData e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.MarketDate_Validate(r);
                }
                private static global::System.DateTime _MarketDate_GetImplementationValue(global::LightSwitchApplication.MarketData.DetailsClass d)
                {
                    return d.ImplementationEntity.MarketDate;
                }
                private static void _MarketDate_SetImplementationValue(global::LightSwitchApplication.MarketData.DetailsClass d, global::System.DateTime v)
                {
                    d.ImplementationEntity.MarketDate = global::LightSwitchApplication.MarketData.DetailsClass.ClearDateTimeKind(v);
                }
                private static void _MarketDate_OnValueChanged(global::LightSwitchApplication.MarketData e)
                {
                    e.MarketDate_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.MarketData, global::LightSwitchApplication.MarketData.DetailsClass, decimal>.Entry
                    Open = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.MarketData, global::LightSwitchApplication.MarketData.DetailsClass, decimal>.Entry(
                        "Open",
                        global::LightSwitchApplication.MarketData.DetailsClass.PropertySetProperties._Open_Stub,
                        global::LightSwitchApplication.MarketData.DetailsClass.PropertySetProperties._Open_ComputeIsReadOnly,
                        global::LightSwitchApplication.MarketData.DetailsClass.PropertySetProperties._Open_Validate,
                        global::LightSwitchApplication.MarketData.DetailsClass.PropertySetProperties._Open_GetImplementationValue,
                        global::LightSwitchApplication.MarketData.DetailsClass.PropertySetProperties._Open_SetImplementationValue,
                        global::LightSwitchApplication.MarketData.DetailsClass.PropertySetProperties._Open_OnValueChanged);
                private static void _Open_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.MarketData.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.MarketData, global::LightSwitchApplication.MarketData.DetailsClass, decimal>.Data> c, global::LightSwitchApplication.MarketData.DetailsClass d, object sf)
                {
                    c(d, ref d._Open, sf);
                }
                private static bool _Open_ComputeIsReadOnly(global::LightSwitchApplication.MarketData e)
                {
                    bool result = false;
                    e.Open_IsReadOnly(ref result);
                    return result;
                }
                private static void _Open_Validate(global::LightSwitchApplication.MarketData e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Open_Validate(r);
                }
                private static decimal _Open_GetImplementationValue(global::LightSwitchApplication.MarketData.DetailsClass d)
                {
                    return d.ImplementationEntity.Open;
                }
                private static void _Open_SetImplementationValue(global::LightSwitchApplication.MarketData.DetailsClass d, decimal v)
                {
                    d.ImplementationEntity.Open = v;
                }
                private static void _Open_OnValueChanged(global::LightSwitchApplication.MarketData e)
                {
                    e.Open_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.MarketData, global::LightSwitchApplication.MarketData.DetailsClass, decimal>.Entry
                    Close = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.MarketData, global::LightSwitchApplication.MarketData.DetailsClass, decimal>.Entry(
                        "Close",
                        global::LightSwitchApplication.MarketData.DetailsClass.PropertySetProperties._Close_Stub,
                        global::LightSwitchApplication.MarketData.DetailsClass.PropertySetProperties._Close_ComputeIsReadOnly,
                        global::LightSwitchApplication.MarketData.DetailsClass.PropertySetProperties._Close_Validate,
                        global::LightSwitchApplication.MarketData.DetailsClass.PropertySetProperties._Close_GetImplementationValue,
                        global::LightSwitchApplication.MarketData.DetailsClass.PropertySetProperties._Close_SetImplementationValue,
                        global::LightSwitchApplication.MarketData.DetailsClass.PropertySetProperties._Close_OnValueChanged);
                private static void _Close_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.MarketData.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.MarketData, global::LightSwitchApplication.MarketData.DetailsClass, decimal>.Data> c, global::LightSwitchApplication.MarketData.DetailsClass d, object sf)
                {
                    c(d, ref d._Close, sf);
                }
                private static bool _Close_ComputeIsReadOnly(global::LightSwitchApplication.MarketData e)
                {
                    bool result = false;
                    e.Close_IsReadOnly(ref result);
                    return result;
                }
                private static void _Close_Validate(global::LightSwitchApplication.MarketData e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Close_Validate(r);
                }
                private static decimal _Close_GetImplementationValue(global::LightSwitchApplication.MarketData.DetailsClass d)
                {
                    return d.ImplementationEntity.Close;
                }
                private static void _Close_SetImplementationValue(global::LightSwitchApplication.MarketData.DetailsClass d, decimal v)
                {
                    d.ImplementationEntity.Close = v;
                }
                private static void _Close_OnValueChanged(global::LightSwitchApplication.MarketData e)
                {
                    e.Close_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.MarketData, global::LightSwitchApplication.MarketData.DetailsClass, decimal>.Entry
                    High = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.MarketData, global::LightSwitchApplication.MarketData.DetailsClass, decimal>.Entry(
                        "High",
                        global::LightSwitchApplication.MarketData.DetailsClass.PropertySetProperties._High_Stub,
                        global::LightSwitchApplication.MarketData.DetailsClass.PropertySetProperties._High_ComputeIsReadOnly,
                        global::LightSwitchApplication.MarketData.DetailsClass.PropertySetProperties._High_Validate,
                        global::LightSwitchApplication.MarketData.DetailsClass.PropertySetProperties._High_GetImplementationValue,
                        global::LightSwitchApplication.MarketData.DetailsClass.PropertySetProperties._High_SetImplementationValue,
                        global::LightSwitchApplication.MarketData.DetailsClass.PropertySetProperties._High_OnValueChanged);
                private static void _High_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.MarketData.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.MarketData, global::LightSwitchApplication.MarketData.DetailsClass, decimal>.Data> c, global::LightSwitchApplication.MarketData.DetailsClass d, object sf)
                {
                    c(d, ref d._High, sf);
                }
                private static bool _High_ComputeIsReadOnly(global::LightSwitchApplication.MarketData e)
                {
                    bool result = false;
                    e.High_IsReadOnly(ref result);
                    return result;
                }
                private static void _High_Validate(global::LightSwitchApplication.MarketData e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.High_Validate(r);
                }
                private static decimal _High_GetImplementationValue(global::LightSwitchApplication.MarketData.DetailsClass d)
                {
                    return d.ImplementationEntity.High;
                }
                private static void _High_SetImplementationValue(global::LightSwitchApplication.MarketData.DetailsClass d, decimal v)
                {
                    d.ImplementationEntity.High = v;
                }
                private static void _High_OnValueChanged(global::LightSwitchApplication.MarketData e)
                {
                    e.High_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.MarketData, global::LightSwitchApplication.MarketData.DetailsClass, decimal>.Entry
                    Low = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.MarketData, global::LightSwitchApplication.MarketData.DetailsClass, decimal>.Entry(
                        "Low",
                        global::LightSwitchApplication.MarketData.DetailsClass.PropertySetProperties._Low_Stub,
                        global::LightSwitchApplication.MarketData.DetailsClass.PropertySetProperties._Low_ComputeIsReadOnly,
                        global::LightSwitchApplication.MarketData.DetailsClass.PropertySetProperties._Low_Validate,
                        global::LightSwitchApplication.MarketData.DetailsClass.PropertySetProperties._Low_GetImplementationValue,
                        global::LightSwitchApplication.MarketData.DetailsClass.PropertySetProperties._Low_SetImplementationValue,
                        global::LightSwitchApplication.MarketData.DetailsClass.PropertySetProperties._Low_OnValueChanged);
                private static void _Low_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.MarketData.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.MarketData, global::LightSwitchApplication.MarketData.DetailsClass, decimal>.Data> c, global::LightSwitchApplication.MarketData.DetailsClass d, object sf)
                {
                    c(d, ref d._Low, sf);
                }
                private static bool _Low_ComputeIsReadOnly(global::LightSwitchApplication.MarketData e)
                {
                    bool result = false;
                    e.Low_IsReadOnly(ref result);
                    return result;
                }
                private static void _Low_Validate(global::LightSwitchApplication.MarketData e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Low_Validate(r);
                }
                private static decimal _Low_GetImplementationValue(global::LightSwitchApplication.MarketData.DetailsClass d)
                {
                    return d.ImplementationEntity.Low;
                }
                private static void _Low_SetImplementationValue(global::LightSwitchApplication.MarketData.DetailsClass d, decimal v)
                {
                    d.ImplementationEntity.Low = v;
                }
                private static void _Low_OnValueChanged(global::LightSwitchApplication.MarketData e)
                {
                    e.Low_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.MarketData, global::LightSwitchApplication.MarketData.DetailsClass, long>.Entry
                    Volume = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.MarketData, global::LightSwitchApplication.MarketData.DetailsClass, long>.Entry(
                        "Volume",
                        global::LightSwitchApplication.MarketData.DetailsClass.PropertySetProperties._Volume_Stub,
                        global::LightSwitchApplication.MarketData.DetailsClass.PropertySetProperties._Volume_ComputeIsReadOnly,
                        global::LightSwitchApplication.MarketData.DetailsClass.PropertySetProperties._Volume_Validate,
                        global::LightSwitchApplication.MarketData.DetailsClass.PropertySetProperties._Volume_GetImplementationValue,
                        global::LightSwitchApplication.MarketData.DetailsClass.PropertySetProperties._Volume_SetImplementationValue,
                        global::LightSwitchApplication.MarketData.DetailsClass.PropertySetProperties._Volume_OnValueChanged);
                private static void _Volume_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.MarketData.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.MarketData, global::LightSwitchApplication.MarketData.DetailsClass, long>.Data> c, global::LightSwitchApplication.MarketData.DetailsClass d, object sf)
                {
                    c(d, ref d._Volume, sf);
                }
                private static bool _Volume_ComputeIsReadOnly(global::LightSwitchApplication.MarketData e)
                {
                    bool result = false;
                    e.Volume_IsReadOnly(ref result);
                    return result;
                }
                private static void _Volume_Validate(global::LightSwitchApplication.MarketData e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Volume_Validate(r);
                }
                private static long _Volume_GetImplementationValue(global::LightSwitchApplication.MarketData.DetailsClass d)
                {
                    return d.ImplementationEntity.Volume;
                }
                private static void _Volume_SetImplementationValue(global::LightSwitchApplication.MarketData.DetailsClass d, long v)
                {
                    d.ImplementationEntity.Volume = v;
                }
                private static void _Volume_OnValueChanged(global::LightSwitchApplication.MarketData e)
                {
                    e.Volume_Changed();
                }
    
            }
    
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.MarketData, global::LightSwitchApplication.MarketData.DetailsClass, global::System.Guid>.Data _Id;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.MarketData, global::LightSwitchApplication.MarketData.DetailsClass, global::System.DateTime>.Data _MarketDate;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.MarketData, global::LightSwitchApplication.MarketData.DetailsClass, decimal>.Data _Open;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.MarketData, global::LightSwitchApplication.MarketData.DetailsClass, decimal>.Data _Close;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.MarketData, global::LightSwitchApplication.MarketData.DetailsClass, decimal>.Data _High;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.MarketData, global::LightSwitchApplication.MarketData.DetailsClass, decimal>.Data _Low;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.MarketData, global::LightSwitchApplication.MarketData.DetailsClass, long>.Data _Volume;
            
        }
    
        #endregion
    }
    
    #endregion
}
