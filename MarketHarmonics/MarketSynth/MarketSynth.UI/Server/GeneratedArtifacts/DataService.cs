//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace LightSwitchApplication
{
    #region Data Services
    
    /// <summary>
    /// Provides members to query and update data in the MarketSynthDomainServiceData datasource.
    /// </summary>
    public sealed partial class MarketSynthDomainServiceDataService
        : global::LightSwitchApplication.MarketSynthDomainServiceData
    {
        #region Constructors
    
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public MarketSynthDomainServiceDataService() : base()
        {
        }
    
        #endregion
    
        #region Private Properties
        
        /// <summary>
        /// Gets the Application object for this application.  The Application object provides access to active screens, methods to open screens and access to the current user.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.Application Application
        {
            get
            {
                return global::LightSwitchApplication.Application.Current;
            }
        }
        
        /// <summary>
        /// Gets the containing data workspace.  The data workspace provides access to all data sources in the application.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.DataWorkspace DataWorkspace
        {
            get
            {
                return (global::LightSwitchApplication.DataWorkspace)this.Details.DataWorkspace;
            }
        }
        
        #endregion
    
        #region Server Interceptions Points
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void MarketDatas_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void MarketDatas_Validate(global::LightSwitchApplication.MarketData entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Indicators_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Indicators_Validate(global::LightSwitchApplication.Indicator entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Studies_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Studies_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Studies_Inserting(global::LightSwitchApplication.Study entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Studies_Inserted(global::LightSwitchApplication.Study entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Studies_Validate(global::LightSwitchApplication.Study entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void StudyIndicators_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void StudyIndicators_Validate(global::LightSwitchApplication.StudyIndicator entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SaveChanges_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SaveChanges_Executing();
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SaveChanges_Executed();
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SaveChanges_ExecuteFailed(global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void GetMarketDataBySymbol_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void GetMarketDataBySymbol_Executing(string symbol);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void GetMarketDataBySymbol_PreprocessQuery(string symbol, ref global::System.Linq.IQueryable<global::LightSwitchApplication.MarketData> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void GetMarketDataBySymbol_Executed(string symbol, global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.MarketData> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void GetMarketDataBySymbol_ExecuteFailed(string symbol, global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void MarketDatas_Single_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void MarketDatas_Single_Executing(global::System.Nullable<global::System.Guid> Id);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void MarketDatas_Single_PreprocessQuery(global::System.Nullable<global::System.Guid> Id, ref global::System.Linq.IQueryable<global::LightSwitchApplication.MarketData> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void MarketDatas_Single_Executed(global::System.Nullable<global::System.Guid> Id, global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.MarketData> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void MarketDatas_Single_ExecuteFailed(global::System.Nullable<global::System.Guid> Id, global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void MarketDatas_SingleOrDefault_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void MarketDatas_SingleOrDefault_Executing(global::System.Nullable<global::System.Guid> Id);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void MarketDatas_SingleOrDefault_PreprocessQuery(global::System.Nullable<global::System.Guid> Id, ref global::System.Linq.IQueryable<global::LightSwitchApplication.MarketData> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void MarketDatas_SingleOrDefault_Executed(global::System.Nullable<global::System.Guid> Id, global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.MarketData> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void MarketDatas_SingleOrDefault_ExecuteFailed(global::System.Nullable<global::System.Guid> Id, global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void MarketDatas_All_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void MarketDatas_All_Executing();
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void MarketDatas_All_PreprocessQuery(ref global::System.Linq.IQueryable<global::LightSwitchApplication.MarketData> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void MarketDatas_All_Executed(global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.MarketData> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void MarketDatas_All_ExecuteFailed(global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Indicators_Single_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Indicators_Single_Executing(global::System.Nullable<global::System.Guid> Id);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Indicators_Single_PreprocessQuery(global::System.Nullable<global::System.Guid> Id, ref global::System.Linq.IQueryable<global::LightSwitchApplication.Indicator> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Indicators_Single_Executed(global::System.Nullable<global::System.Guid> Id, global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Indicator> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Indicators_Single_ExecuteFailed(global::System.Nullable<global::System.Guid> Id, global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Indicators_SingleOrDefault_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Indicators_SingleOrDefault_Executing(global::System.Nullable<global::System.Guid> Id);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Indicators_SingleOrDefault_PreprocessQuery(global::System.Nullable<global::System.Guid> Id, ref global::System.Linq.IQueryable<global::LightSwitchApplication.Indicator> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Indicators_SingleOrDefault_Executed(global::System.Nullable<global::System.Guid> Id, global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Indicator> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Indicators_SingleOrDefault_ExecuteFailed(global::System.Nullable<global::System.Guid> Id, global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Indicators_All_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Indicators_All_Executing();
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Indicators_All_PreprocessQuery(ref global::System.Linq.IQueryable<global::LightSwitchApplication.Indicator> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Indicators_All_Executed(global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Indicator> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Indicators_All_ExecuteFailed(global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Studies_Single_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Studies_Single_Executing(global::System.Nullable<global::System.Guid> Id);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Studies_Single_PreprocessQuery(global::System.Nullable<global::System.Guid> Id, ref global::System.Linq.IQueryable<global::LightSwitchApplication.Study> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Studies_Single_Executed(global::System.Nullable<global::System.Guid> Id, global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Study> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Studies_Single_ExecuteFailed(global::System.Nullable<global::System.Guid> Id, global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Studies_SingleOrDefault_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Studies_SingleOrDefault_Executing(global::System.Nullable<global::System.Guid> Id);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Studies_SingleOrDefault_PreprocessQuery(global::System.Nullable<global::System.Guid> Id, ref global::System.Linq.IQueryable<global::LightSwitchApplication.Study> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Studies_SingleOrDefault_Executed(global::System.Nullable<global::System.Guid> Id, global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Study> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Studies_SingleOrDefault_ExecuteFailed(global::System.Nullable<global::System.Guid> Id, global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Studies_All_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Studies_All_Executing();
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Studies_All_PreprocessQuery(ref global::System.Linq.IQueryable<global::LightSwitchApplication.Study> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Studies_All_Executed(global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Study> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Studies_All_ExecuteFailed(global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void StudyIndicators_Single_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void StudyIndicators_Single_Executing(global::System.Nullable<global::System.Guid> Id);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void StudyIndicators_Single_PreprocessQuery(global::System.Nullable<global::System.Guid> Id, ref global::System.Linq.IQueryable<global::LightSwitchApplication.StudyIndicator> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void StudyIndicators_Single_Executed(global::System.Nullable<global::System.Guid> Id, global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.StudyIndicator> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void StudyIndicators_Single_ExecuteFailed(global::System.Nullable<global::System.Guid> Id, global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void StudyIndicators_SingleOrDefault_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void StudyIndicators_SingleOrDefault_Executing(global::System.Nullable<global::System.Guid> Id);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void StudyIndicators_SingleOrDefault_PreprocessQuery(global::System.Nullable<global::System.Guid> Id, ref global::System.Linq.IQueryable<global::LightSwitchApplication.StudyIndicator> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void StudyIndicators_SingleOrDefault_Executed(global::System.Nullable<global::System.Guid> Id, global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.StudyIndicator> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void StudyIndicators_SingleOrDefault_ExecuteFailed(global::System.Nullable<global::System.Guid> Id, global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void StudyIndicators_All_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void StudyIndicators_All_Executing();
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void StudyIndicators_All_PreprocessQuery(ref global::System.Linq.IQueryable<global::LightSwitchApplication.StudyIndicator> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void StudyIndicators_All_Executed(global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.StudyIndicator> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void StudyIndicators_All_ExecuteFailed(global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void GetStudyIndicator_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void GetStudyIndicator_Executing(string instrument, string indicator);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void GetStudyIndicator_PreprocessQuery(string instrument, string indicator, ref global::System.Linq.IQueryable<global::LightSwitchApplication.StudyIndicator> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void GetStudyIndicator_Executed(string instrument, string indicator, global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.StudyIndicator> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void GetStudyIndicator_ExecuteFailed(string instrument, string indicator, global::System.Exception exception);
    
        #endregion
    
        #region Details Class
    
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
        public static new class DetailsClass
        {
    
            static DetailsClass()
            {
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.MarketSynthDomainServiceDataService, global::LightSwitchApplication.MarketData>
                __MarketDatasEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.MarketSynthDomainServiceDataService, global::LightSwitchApplication.MarketData>(
                    "MarketDatas",
                    null,
                    null,
                    null,
                    global::LightSwitchApplication.MarketSynthDomainServiceDataService.DetailsClass.__MarketDatas_CanRead,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    global::LightSwitchApplication.MarketSynthDomainServiceDataService.DetailsClass.__MarketDatas_Validate);
            private static bool __MarketDatas_CanRead(global::LightSwitchApplication.MarketSynthDomainServiceDataService d)
            {
                bool result = true;
                d.MarketDatas_CanRead(ref result);
                return result;
            }
            private static void __MarketDatas_Validate(global::LightSwitchApplication.MarketSynthDomainServiceDataService d, global::LightSwitchApplication.MarketData e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.MarketDatas_Validate(e, r);
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.MarketSynthDomainServiceDataService, global::LightSwitchApplication.Indicator>
                __IndicatorsEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.MarketSynthDomainServiceDataService, global::LightSwitchApplication.Indicator>(
                    "Indicators",
                    null,
                    null,
                    null,
                    global::LightSwitchApplication.MarketSynthDomainServiceDataService.DetailsClass.__Indicators_CanRead,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    global::LightSwitchApplication.MarketSynthDomainServiceDataService.DetailsClass.__Indicators_Validate);
            private static bool __Indicators_CanRead(global::LightSwitchApplication.MarketSynthDomainServiceDataService d)
            {
                bool result = true;
                d.Indicators_CanRead(ref result);
                return result;
            }
            private static void __Indicators_Validate(global::LightSwitchApplication.MarketSynthDomainServiceDataService d, global::LightSwitchApplication.Indicator e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.Indicators_Validate(e, r);
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.MarketSynthDomainServiceDataService, global::LightSwitchApplication.Study>
                __StudiesEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.MarketSynthDomainServiceDataService, global::LightSwitchApplication.Study>(
                    "Studies",
                    global::LightSwitchApplication.MarketSynthDomainServiceDataService.DetailsClass.__Studies_CanInsert,
                    null,
                    null,
                    global::LightSwitchApplication.MarketSynthDomainServiceDataService.DetailsClass.__Studies_CanRead,
                    global::LightSwitchApplication.MarketSynthDomainServiceDataService.DetailsClass.__Studies_Inserting,
                    global::LightSwitchApplication.MarketSynthDomainServiceDataService.DetailsClass.__Studies_Inserted,
                    null,
                    null,
                    null,
                    null,
                    global::LightSwitchApplication.MarketSynthDomainServiceDataService.DetailsClass.__Studies_Validate);
            private static bool __Studies_CanInsert(global::LightSwitchApplication.MarketSynthDomainServiceDataService d)
            {
                bool result = true;
                d.Studies_CanInsert(ref result);
                return result;
            }
            private static bool __Studies_CanRead(global::LightSwitchApplication.MarketSynthDomainServiceDataService d)
            {
                bool result = true;
                d.Studies_CanRead(ref result);
                return result;
            }
            private static void __Studies_Inserting(global::LightSwitchApplication.MarketSynthDomainServiceDataService d, global::LightSwitchApplication.Study e)
            {
                d.Studies_Inserting(e);
            }
            private static void __Studies_Inserted(global::LightSwitchApplication.MarketSynthDomainServiceDataService d, global::LightSwitchApplication.Study e)
            {
                d.Studies_Inserted(e);
            }
            private static void __Studies_Validate(global::LightSwitchApplication.MarketSynthDomainServiceDataService d, global::LightSwitchApplication.Study e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.Studies_Validate(e, r);
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.MarketSynthDomainServiceDataService, global::LightSwitchApplication.StudyIndicator>
                __StudyIndicatorsEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.MarketSynthDomainServiceDataService, global::LightSwitchApplication.StudyIndicator>(
                    "StudyIndicators",
                    null,
                    null,
                    null,
                    global::LightSwitchApplication.MarketSynthDomainServiceDataService.DetailsClass.__StudyIndicators_CanRead,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    global::LightSwitchApplication.MarketSynthDomainServiceDataService.DetailsClass.__StudyIndicators_Validate);
            private static bool __StudyIndicators_CanRead(global::LightSwitchApplication.MarketSynthDomainServiceDataService d)
            {
                bool result = true;
                d.StudyIndicators_CanRead(ref result);
                return result;
            }
            private static void __StudyIndicators_Validate(global::LightSwitchApplication.MarketSynthDomainServiceDataService d, global::LightSwitchApplication.StudyIndicator e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.StudyIndicators_Validate(e, r);
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.OperationEntry<global::LightSwitchApplication.MarketSynthDomainServiceDataService>
                __SaveChangesEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.OperationEntry<global::LightSwitchApplication.MarketSynthDomainServiceDataService>(
                    "SaveChanges",
                    global::LightSwitchApplication.MarketSynthDomainServiceDataService.DetailsClass.__SaveChanges_CanExecute,
                    global::LightSwitchApplication.MarketSynthDomainServiceDataService.DetailsClass.__SaveChanges_Executing,
                    global::LightSwitchApplication.MarketSynthDomainServiceDataService.DetailsClass.__SaveChanges_Executed,
                    global::LightSwitchApplication.MarketSynthDomainServiceDataService.DetailsClass.__SaveChanges_Failed);
            private static bool __SaveChanges_CanExecute(global::LightSwitchApplication.MarketSynthDomainServiceDataService d, bool r)
            {
                d.SaveChanges_CanExecute(ref r);
                return r;
            }
            private static void __SaveChanges_Executing(global::LightSwitchApplication.MarketSynthDomainServiceDataService d, object[] args)
            {
                d.SaveChanges_Executing();
            }
            private static void __SaveChanges_Executed(global::LightSwitchApplication.MarketSynthDomainServiceDataService d, object[] args)
            {
                d.SaveChanges_Executed();
            }
            private static void __SaveChanges_Failed(global::LightSwitchApplication.MarketSynthDomainServiceDataService d, object[] args, global::System.Exception ex)
            {
                d.SaveChanges_ExecuteFailed(ex);
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.MarketSynthDomainServiceDataService, global::LightSwitchApplication.MarketData>
                __GetMarketDataBySymbolEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.MarketSynthDomainServiceDataService, global::LightSwitchApplication.MarketData>(
                    "GetMarketDataBySymbol",
                    global::LightSwitchApplication.MarketSynthDomainServiceDataService.DetailsClass.__GetMarketDataBySymbol_CanExecute,
                    global::LightSwitchApplication.MarketSynthDomainServiceDataService.DetailsClass.__GetMarketDataBySymbol_Executing,
                    global::LightSwitchApplication.MarketSynthDomainServiceDataService.DetailsClass.__GetMarketDataBySymbol_Executed,
                    global::LightSwitchApplication.MarketSynthDomainServiceDataService.DetailsClass.__GetMarketDataBySymbol_Failed,
                    global::LightSwitchApplication.MarketSynthDomainServiceDataService.DetailsClass.__GetMarketDataBySymbol_PreprocessQuery);
            private static bool __GetMarketDataBySymbol_CanExecute(global::LightSwitchApplication.MarketSynthDomainServiceDataService d, bool r)
            {
                d.GetMarketDataBySymbol_CanExecute(ref r);
                return r;
            }
            private static void __GetMarketDataBySymbol_Executing(global::LightSwitchApplication.MarketSynthDomainServiceDataService d, object[] args)
            {
                d.GetMarketDataBySymbol_Executing((string)args[0]);
            }
            private static void __GetMarketDataBySymbol_Executed(global::LightSwitchApplication.MarketSynthDomainServiceDataService d, object[] args)
            {
                d.GetMarketDataBySymbol_Executed((string)args[0], (global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.MarketData>)args[1]);
            }
            private static void __GetMarketDataBySymbol_Failed(global::LightSwitchApplication.MarketSynthDomainServiceDataService d, object[] args, global::System.Exception ex)
            {
                d.GetMarketDataBySymbol_ExecuteFailed((string)args[0], ex);
            }
            private static global::System.Linq.IQueryable __GetMarketDataBySymbol_PreprocessQuery(global::LightSwitchApplication.MarketSynthDomainServiceDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.MarketData> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.MarketData>)args[1];
                d.GetMarketDataBySymbol_PreprocessQuery((string)args[0], ref query);
                return query;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.MarketSynthDomainServiceDataService, global::LightSwitchApplication.MarketData>
                __MarketDatas_SingleEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.MarketSynthDomainServiceDataService, global::LightSwitchApplication.MarketData>(
                    "MarketDatas_Single",
                    global::LightSwitchApplication.MarketSynthDomainServiceDataService.DetailsClass.__MarketDatas_Single_CanExecute,
                    global::LightSwitchApplication.MarketSynthDomainServiceDataService.DetailsClass.__MarketDatas_Single_Executing,
                    global::LightSwitchApplication.MarketSynthDomainServiceDataService.DetailsClass.__MarketDatas_Single_Executed,
                    global::LightSwitchApplication.MarketSynthDomainServiceDataService.DetailsClass.__MarketDatas_Single_Failed,
                    global::LightSwitchApplication.MarketSynthDomainServiceDataService.DetailsClass.__MarketDatas_Single_PreprocessQuery);
            private static bool __MarketDatas_Single_CanExecute(global::LightSwitchApplication.MarketSynthDomainServiceDataService d, bool r)
            {
                d.MarketDatas_Single_CanExecute(ref r);
                return r;
            }
            private static void __MarketDatas_Single_Executing(global::LightSwitchApplication.MarketSynthDomainServiceDataService d, object[] args)
            {
                d.MarketDatas_Single_Executing((global::System.Nullable<global::System.Guid>)args[0]);
            }
            private static void __MarketDatas_Single_Executed(global::LightSwitchApplication.MarketSynthDomainServiceDataService d, object[] args)
            {
                d.MarketDatas_Single_Executed((global::System.Nullable<global::System.Guid>)args[0], (global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.MarketData>)args[1]);
            }
            private static void __MarketDatas_Single_Failed(global::LightSwitchApplication.MarketSynthDomainServiceDataService d, object[] args, global::System.Exception ex)
            {
                d.MarketDatas_Single_ExecuteFailed((global::System.Nullable<global::System.Guid>)args[0], ex);
            }
            private static global::System.Linq.IQueryable __MarketDatas_Single_PreprocessQuery(global::LightSwitchApplication.MarketSynthDomainServiceDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.MarketData> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.MarketData>)args[1];
                d.MarketDatas_Single_PreprocessQuery((global::System.Nullable<global::System.Guid>)args[0], ref query);
                return query;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.MarketSynthDomainServiceDataService, global::LightSwitchApplication.MarketData>
                __MarketDatas_SingleOrDefaultEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.MarketSynthDomainServiceDataService, global::LightSwitchApplication.MarketData>(
                    "MarketDatas_SingleOrDefault",
                    global::LightSwitchApplication.MarketSynthDomainServiceDataService.DetailsClass.__MarketDatas_SingleOrDefault_CanExecute,
                    global::LightSwitchApplication.MarketSynthDomainServiceDataService.DetailsClass.__MarketDatas_SingleOrDefault_Executing,
                    global::LightSwitchApplication.MarketSynthDomainServiceDataService.DetailsClass.__MarketDatas_SingleOrDefault_Executed,
                    global::LightSwitchApplication.MarketSynthDomainServiceDataService.DetailsClass.__MarketDatas_SingleOrDefault_Failed,
                    global::LightSwitchApplication.MarketSynthDomainServiceDataService.DetailsClass.__MarketDatas_SingleOrDefault_PreprocessQuery);
            private static bool __MarketDatas_SingleOrDefault_CanExecute(global::LightSwitchApplication.MarketSynthDomainServiceDataService d, bool r)
            {
                d.MarketDatas_SingleOrDefault_CanExecute(ref r);
                return r;
            }
            private static void __MarketDatas_SingleOrDefault_Executing(global::LightSwitchApplication.MarketSynthDomainServiceDataService d, object[] args)
            {
                d.MarketDatas_SingleOrDefault_Executing((global::System.Nullable<global::System.Guid>)args[0]);
            }
            private static void __MarketDatas_SingleOrDefault_Executed(global::LightSwitchApplication.MarketSynthDomainServiceDataService d, object[] args)
            {
                d.MarketDatas_SingleOrDefault_Executed((global::System.Nullable<global::System.Guid>)args[0], (global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.MarketData>)args[1]);
            }
            private static void __MarketDatas_SingleOrDefault_Failed(global::LightSwitchApplication.MarketSynthDomainServiceDataService d, object[] args, global::System.Exception ex)
            {
                d.MarketDatas_SingleOrDefault_ExecuteFailed((global::System.Nullable<global::System.Guid>)args[0], ex);
            }
            private static global::System.Linq.IQueryable __MarketDatas_SingleOrDefault_PreprocessQuery(global::LightSwitchApplication.MarketSynthDomainServiceDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.MarketData> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.MarketData>)args[1];
                d.MarketDatas_SingleOrDefault_PreprocessQuery((global::System.Nullable<global::System.Guid>)args[0], ref query);
                return query;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.MarketSynthDomainServiceDataService, global::LightSwitchApplication.MarketData>
                __MarketDatas_AllEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.MarketSynthDomainServiceDataService, global::LightSwitchApplication.MarketData>(
                    "MarketDatas_All",
                    global::LightSwitchApplication.MarketSynthDomainServiceDataService.DetailsClass.__MarketDatas_All_CanExecute,
                    global::LightSwitchApplication.MarketSynthDomainServiceDataService.DetailsClass.__MarketDatas_All_Executing,
                    global::LightSwitchApplication.MarketSynthDomainServiceDataService.DetailsClass.__MarketDatas_All_Executed,
                    global::LightSwitchApplication.MarketSynthDomainServiceDataService.DetailsClass.__MarketDatas_All_Failed,
                    global::LightSwitchApplication.MarketSynthDomainServiceDataService.DetailsClass.__MarketDatas_All_PreprocessQuery);
            private static bool __MarketDatas_All_CanExecute(global::LightSwitchApplication.MarketSynthDomainServiceDataService d, bool r)
            {
                d.MarketDatas_All_CanExecute(ref r);
                return r;
            }
            private static void __MarketDatas_All_Executing(global::LightSwitchApplication.MarketSynthDomainServiceDataService d, object[] args)
            {
                d.MarketDatas_All_Executing();
            }
            private static void __MarketDatas_All_Executed(global::LightSwitchApplication.MarketSynthDomainServiceDataService d, object[] args)
            {
                d.MarketDatas_All_Executed((global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.MarketData>)args[0]);
            }
            private static void __MarketDatas_All_Failed(global::LightSwitchApplication.MarketSynthDomainServiceDataService d, object[] args, global::System.Exception ex)
            {
                d.MarketDatas_All_ExecuteFailed(ex);
            }
            private static global::System.Linq.IQueryable __MarketDatas_All_PreprocessQuery(global::LightSwitchApplication.MarketSynthDomainServiceDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.MarketData> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.MarketData>)args[0];
                d.MarketDatas_All_PreprocessQuery(ref query);
                return query;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.MarketSynthDomainServiceDataService, global::LightSwitchApplication.Indicator>
                __Indicators_SingleEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.MarketSynthDomainServiceDataService, global::LightSwitchApplication.Indicator>(
                    "Indicators_Single",
                    global::LightSwitchApplication.MarketSynthDomainServiceDataService.DetailsClass.__Indicators_Single_CanExecute,
                    global::LightSwitchApplication.MarketSynthDomainServiceDataService.DetailsClass.__Indicators_Single_Executing,
                    global::LightSwitchApplication.MarketSynthDomainServiceDataService.DetailsClass.__Indicators_Single_Executed,
                    global::LightSwitchApplication.MarketSynthDomainServiceDataService.DetailsClass.__Indicators_Single_Failed,
                    global::LightSwitchApplication.MarketSynthDomainServiceDataService.DetailsClass.__Indicators_Single_PreprocessQuery);
            private static bool __Indicators_Single_CanExecute(global::LightSwitchApplication.MarketSynthDomainServiceDataService d, bool r)
            {
                d.Indicators_Single_CanExecute(ref r);
                return r;
            }
            private static void __Indicators_Single_Executing(global::LightSwitchApplication.MarketSynthDomainServiceDataService d, object[] args)
            {
                d.Indicators_Single_Executing((global::System.Nullable<global::System.Guid>)args[0]);
            }
            private static void __Indicators_Single_Executed(global::LightSwitchApplication.MarketSynthDomainServiceDataService d, object[] args)
            {
                d.Indicators_Single_Executed((global::System.Nullable<global::System.Guid>)args[0], (global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Indicator>)args[1]);
            }
            private static void __Indicators_Single_Failed(global::LightSwitchApplication.MarketSynthDomainServiceDataService d, object[] args, global::System.Exception ex)
            {
                d.Indicators_Single_ExecuteFailed((global::System.Nullable<global::System.Guid>)args[0], ex);
            }
            private static global::System.Linq.IQueryable __Indicators_Single_PreprocessQuery(global::LightSwitchApplication.MarketSynthDomainServiceDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.Indicator> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.Indicator>)args[1];
                d.Indicators_Single_PreprocessQuery((global::System.Nullable<global::System.Guid>)args[0], ref query);
                return query;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.MarketSynthDomainServiceDataService, global::LightSwitchApplication.Indicator>
                __Indicators_SingleOrDefaultEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.MarketSynthDomainServiceDataService, global::LightSwitchApplication.Indicator>(
                    "Indicators_SingleOrDefault",
                    global::LightSwitchApplication.MarketSynthDomainServiceDataService.DetailsClass.__Indicators_SingleOrDefault_CanExecute,
                    global::LightSwitchApplication.MarketSynthDomainServiceDataService.DetailsClass.__Indicators_SingleOrDefault_Executing,
                    global::LightSwitchApplication.MarketSynthDomainServiceDataService.DetailsClass.__Indicators_SingleOrDefault_Executed,
                    global::LightSwitchApplication.MarketSynthDomainServiceDataService.DetailsClass.__Indicators_SingleOrDefault_Failed,
                    global::LightSwitchApplication.MarketSynthDomainServiceDataService.DetailsClass.__Indicators_SingleOrDefault_PreprocessQuery);
            private static bool __Indicators_SingleOrDefault_CanExecute(global::LightSwitchApplication.MarketSynthDomainServiceDataService d, bool r)
            {
                d.Indicators_SingleOrDefault_CanExecute(ref r);
                return r;
            }
            private static void __Indicators_SingleOrDefault_Executing(global::LightSwitchApplication.MarketSynthDomainServiceDataService d, object[] args)
            {
                d.Indicators_SingleOrDefault_Executing((global::System.Nullable<global::System.Guid>)args[0]);
            }
            private static void __Indicators_SingleOrDefault_Executed(global::LightSwitchApplication.MarketSynthDomainServiceDataService d, object[] args)
            {
                d.Indicators_SingleOrDefault_Executed((global::System.Nullable<global::System.Guid>)args[0], (global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Indicator>)args[1]);
            }
            private static void __Indicators_SingleOrDefault_Failed(global::LightSwitchApplication.MarketSynthDomainServiceDataService d, object[] args, global::System.Exception ex)
            {
                d.Indicators_SingleOrDefault_ExecuteFailed((global::System.Nullable<global::System.Guid>)args[0], ex);
            }
            private static global::System.Linq.IQueryable __Indicators_SingleOrDefault_PreprocessQuery(global::LightSwitchApplication.MarketSynthDomainServiceDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.Indicator> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.Indicator>)args[1];
                d.Indicators_SingleOrDefault_PreprocessQuery((global::System.Nullable<global::System.Guid>)args[0], ref query);
                return query;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.MarketSynthDomainServiceDataService, global::LightSwitchApplication.Indicator>
                __Indicators_AllEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.MarketSynthDomainServiceDataService, global::LightSwitchApplication.Indicator>(
                    "Indicators_All",
                    global::LightSwitchApplication.MarketSynthDomainServiceDataService.DetailsClass.__Indicators_All_CanExecute,
                    global::LightSwitchApplication.MarketSynthDomainServiceDataService.DetailsClass.__Indicators_All_Executing,
                    global::LightSwitchApplication.MarketSynthDomainServiceDataService.DetailsClass.__Indicators_All_Executed,
                    global::LightSwitchApplication.MarketSynthDomainServiceDataService.DetailsClass.__Indicators_All_Failed,
                    global::LightSwitchApplication.MarketSynthDomainServiceDataService.DetailsClass.__Indicators_All_PreprocessQuery);
            private static bool __Indicators_All_CanExecute(global::LightSwitchApplication.MarketSynthDomainServiceDataService d, bool r)
            {
                d.Indicators_All_CanExecute(ref r);
                return r;
            }
            private static void __Indicators_All_Executing(global::LightSwitchApplication.MarketSynthDomainServiceDataService d, object[] args)
            {
                d.Indicators_All_Executing();
            }
            private static void __Indicators_All_Executed(global::LightSwitchApplication.MarketSynthDomainServiceDataService d, object[] args)
            {
                d.Indicators_All_Executed((global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Indicator>)args[0]);
            }
            private static void __Indicators_All_Failed(global::LightSwitchApplication.MarketSynthDomainServiceDataService d, object[] args, global::System.Exception ex)
            {
                d.Indicators_All_ExecuteFailed(ex);
            }
            private static global::System.Linq.IQueryable __Indicators_All_PreprocessQuery(global::LightSwitchApplication.MarketSynthDomainServiceDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.Indicator> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.Indicator>)args[0];
                d.Indicators_All_PreprocessQuery(ref query);
                return query;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.MarketSynthDomainServiceDataService, global::LightSwitchApplication.Study>
                __Studies_SingleEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.MarketSynthDomainServiceDataService, global::LightSwitchApplication.Study>(
                    "Studies_Single",
                    global::LightSwitchApplication.MarketSynthDomainServiceDataService.DetailsClass.__Studies_Single_CanExecute,
                    global::LightSwitchApplication.MarketSynthDomainServiceDataService.DetailsClass.__Studies_Single_Executing,
                    global::LightSwitchApplication.MarketSynthDomainServiceDataService.DetailsClass.__Studies_Single_Executed,
                    global::LightSwitchApplication.MarketSynthDomainServiceDataService.DetailsClass.__Studies_Single_Failed,
                    global::LightSwitchApplication.MarketSynthDomainServiceDataService.DetailsClass.__Studies_Single_PreprocessQuery);
            private static bool __Studies_Single_CanExecute(global::LightSwitchApplication.MarketSynthDomainServiceDataService d, bool r)
            {
                d.Studies_Single_CanExecute(ref r);
                return r;
            }
            private static void __Studies_Single_Executing(global::LightSwitchApplication.MarketSynthDomainServiceDataService d, object[] args)
            {
                d.Studies_Single_Executing((global::System.Nullable<global::System.Guid>)args[0]);
            }
            private static void __Studies_Single_Executed(global::LightSwitchApplication.MarketSynthDomainServiceDataService d, object[] args)
            {
                d.Studies_Single_Executed((global::System.Nullable<global::System.Guid>)args[0], (global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Study>)args[1]);
            }
            private static void __Studies_Single_Failed(global::LightSwitchApplication.MarketSynthDomainServiceDataService d, object[] args, global::System.Exception ex)
            {
                d.Studies_Single_ExecuteFailed((global::System.Nullable<global::System.Guid>)args[0], ex);
            }
            private static global::System.Linq.IQueryable __Studies_Single_PreprocessQuery(global::LightSwitchApplication.MarketSynthDomainServiceDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.Study> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.Study>)args[1];
                d.Studies_Single_PreprocessQuery((global::System.Nullable<global::System.Guid>)args[0], ref query);
                return query;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.MarketSynthDomainServiceDataService, global::LightSwitchApplication.Study>
                __Studies_SingleOrDefaultEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.MarketSynthDomainServiceDataService, global::LightSwitchApplication.Study>(
                    "Studies_SingleOrDefault",
                    global::LightSwitchApplication.MarketSynthDomainServiceDataService.DetailsClass.__Studies_SingleOrDefault_CanExecute,
                    global::LightSwitchApplication.MarketSynthDomainServiceDataService.DetailsClass.__Studies_SingleOrDefault_Executing,
                    global::LightSwitchApplication.MarketSynthDomainServiceDataService.DetailsClass.__Studies_SingleOrDefault_Executed,
                    global::LightSwitchApplication.MarketSynthDomainServiceDataService.DetailsClass.__Studies_SingleOrDefault_Failed,
                    global::LightSwitchApplication.MarketSynthDomainServiceDataService.DetailsClass.__Studies_SingleOrDefault_PreprocessQuery);
            private static bool __Studies_SingleOrDefault_CanExecute(global::LightSwitchApplication.MarketSynthDomainServiceDataService d, bool r)
            {
                d.Studies_SingleOrDefault_CanExecute(ref r);
                return r;
            }
            private static void __Studies_SingleOrDefault_Executing(global::LightSwitchApplication.MarketSynthDomainServiceDataService d, object[] args)
            {
                d.Studies_SingleOrDefault_Executing((global::System.Nullable<global::System.Guid>)args[0]);
            }
            private static void __Studies_SingleOrDefault_Executed(global::LightSwitchApplication.MarketSynthDomainServiceDataService d, object[] args)
            {
                d.Studies_SingleOrDefault_Executed((global::System.Nullable<global::System.Guid>)args[0], (global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Study>)args[1]);
            }
            private static void __Studies_SingleOrDefault_Failed(global::LightSwitchApplication.MarketSynthDomainServiceDataService d, object[] args, global::System.Exception ex)
            {
                d.Studies_SingleOrDefault_ExecuteFailed((global::System.Nullable<global::System.Guid>)args[0], ex);
            }
            private static global::System.Linq.IQueryable __Studies_SingleOrDefault_PreprocessQuery(global::LightSwitchApplication.MarketSynthDomainServiceDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.Study> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.Study>)args[1];
                d.Studies_SingleOrDefault_PreprocessQuery((global::System.Nullable<global::System.Guid>)args[0], ref query);
                return query;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.MarketSynthDomainServiceDataService, global::LightSwitchApplication.Study>
                __Studies_AllEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.MarketSynthDomainServiceDataService, global::LightSwitchApplication.Study>(
                    "Studies_All",
                    global::LightSwitchApplication.MarketSynthDomainServiceDataService.DetailsClass.__Studies_All_CanExecute,
                    global::LightSwitchApplication.MarketSynthDomainServiceDataService.DetailsClass.__Studies_All_Executing,
                    global::LightSwitchApplication.MarketSynthDomainServiceDataService.DetailsClass.__Studies_All_Executed,
                    global::LightSwitchApplication.MarketSynthDomainServiceDataService.DetailsClass.__Studies_All_Failed,
                    global::LightSwitchApplication.MarketSynthDomainServiceDataService.DetailsClass.__Studies_All_PreprocessQuery);
            private static bool __Studies_All_CanExecute(global::LightSwitchApplication.MarketSynthDomainServiceDataService d, bool r)
            {
                d.Studies_All_CanExecute(ref r);
                return r;
            }
            private static void __Studies_All_Executing(global::LightSwitchApplication.MarketSynthDomainServiceDataService d, object[] args)
            {
                d.Studies_All_Executing();
            }
            private static void __Studies_All_Executed(global::LightSwitchApplication.MarketSynthDomainServiceDataService d, object[] args)
            {
                d.Studies_All_Executed((global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Study>)args[0]);
            }
            private static void __Studies_All_Failed(global::LightSwitchApplication.MarketSynthDomainServiceDataService d, object[] args, global::System.Exception ex)
            {
                d.Studies_All_ExecuteFailed(ex);
            }
            private static global::System.Linq.IQueryable __Studies_All_PreprocessQuery(global::LightSwitchApplication.MarketSynthDomainServiceDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.Study> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.Study>)args[0];
                d.Studies_All_PreprocessQuery(ref query);
                return query;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.MarketSynthDomainServiceDataService, global::LightSwitchApplication.StudyIndicator>
                __StudyIndicators_SingleEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.MarketSynthDomainServiceDataService, global::LightSwitchApplication.StudyIndicator>(
                    "StudyIndicators_Single",
                    global::LightSwitchApplication.MarketSynthDomainServiceDataService.DetailsClass.__StudyIndicators_Single_CanExecute,
                    global::LightSwitchApplication.MarketSynthDomainServiceDataService.DetailsClass.__StudyIndicators_Single_Executing,
                    global::LightSwitchApplication.MarketSynthDomainServiceDataService.DetailsClass.__StudyIndicators_Single_Executed,
                    global::LightSwitchApplication.MarketSynthDomainServiceDataService.DetailsClass.__StudyIndicators_Single_Failed,
                    global::LightSwitchApplication.MarketSynthDomainServiceDataService.DetailsClass.__StudyIndicators_Single_PreprocessQuery);
            private static bool __StudyIndicators_Single_CanExecute(global::LightSwitchApplication.MarketSynthDomainServiceDataService d, bool r)
            {
                d.StudyIndicators_Single_CanExecute(ref r);
                return r;
            }
            private static void __StudyIndicators_Single_Executing(global::LightSwitchApplication.MarketSynthDomainServiceDataService d, object[] args)
            {
                d.StudyIndicators_Single_Executing((global::System.Nullable<global::System.Guid>)args[0]);
            }
            private static void __StudyIndicators_Single_Executed(global::LightSwitchApplication.MarketSynthDomainServiceDataService d, object[] args)
            {
                d.StudyIndicators_Single_Executed((global::System.Nullable<global::System.Guid>)args[0], (global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.StudyIndicator>)args[1]);
            }
            private static void __StudyIndicators_Single_Failed(global::LightSwitchApplication.MarketSynthDomainServiceDataService d, object[] args, global::System.Exception ex)
            {
                d.StudyIndicators_Single_ExecuteFailed((global::System.Nullable<global::System.Guid>)args[0], ex);
            }
            private static global::System.Linq.IQueryable __StudyIndicators_Single_PreprocessQuery(global::LightSwitchApplication.MarketSynthDomainServiceDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.StudyIndicator> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.StudyIndicator>)args[1];
                d.StudyIndicators_Single_PreprocessQuery((global::System.Nullable<global::System.Guid>)args[0], ref query);
                return query;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.MarketSynthDomainServiceDataService, global::LightSwitchApplication.StudyIndicator>
                __StudyIndicators_SingleOrDefaultEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.MarketSynthDomainServiceDataService, global::LightSwitchApplication.StudyIndicator>(
                    "StudyIndicators_SingleOrDefault",
                    global::LightSwitchApplication.MarketSynthDomainServiceDataService.DetailsClass.__StudyIndicators_SingleOrDefault_CanExecute,
                    global::LightSwitchApplication.MarketSynthDomainServiceDataService.DetailsClass.__StudyIndicators_SingleOrDefault_Executing,
                    global::LightSwitchApplication.MarketSynthDomainServiceDataService.DetailsClass.__StudyIndicators_SingleOrDefault_Executed,
                    global::LightSwitchApplication.MarketSynthDomainServiceDataService.DetailsClass.__StudyIndicators_SingleOrDefault_Failed,
                    global::LightSwitchApplication.MarketSynthDomainServiceDataService.DetailsClass.__StudyIndicators_SingleOrDefault_PreprocessQuery);
            private static bool __StudyIndicators_SingleOrDefault_CanExecute(global::LightSwitchApplication.MarketSynthDomainServiceDataService d, bool r)
            {
                d.StudyIndicators_SingleOrDefault_CanExecute(ref r);
                return r;
            }
            private static void __StudyIndicators_SingleOrDefault_Executing(global::LightSwitchApplication.MarketSynthDomainServiceDataService d, object[] args)
            {
                d.StudyIndicators_SingleOrDefault_Executing((global::System.Nullable<global::System.Guid>)args[0]);
            }
            private static void __StudyIndicators_SingleOrDefault_Executed(global::LightSwitchApplication.MarketSynthDomainServiceDataService d, object[] args)
            {
                d.StudyIndicators_SingleOrDefault_Executed((global::System.Nullable<global::System.Guid>)args[0], (global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.StudyIndicator>)args[1]);
            }
            private static void __StudyIndicators_SingleOrDefault_Failed(global::LightSwitchApplication.MarketSynthDomainServiceDataService d, object[] args, global::System.Exception ex)
            {
                d.StudyIndicators_SingleOrDefault_ExecuteFailed((global::System.Nullable<global::System.Guid>)args[0], ex);
            }
            private static global::System.Linq.IQueryable __StudyIndicators_SingleOrDefault_PreprocessQuery(global::LightSwitchApplication.MarketSynthDomainServiceDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.StudyIndicator> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.StudyIndicator>)args[1];
                d.StudyIndicators_SingleOrDefault_PreprocessQuery((global::System.Nullable<global::System.Guid>)args[0], ref query);
                return query;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.MarketSynthDomainServiceDataService, global::LightSwitchApplication.StudyIndicator>
                __StudyIndicators_AllEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.MarketSynthDomainServiceDataService, global::LightSwitchApplication.StudyIndicator>(
                    "StudyIndicators_All",
                    global::LightSwitchApplication.MarketSynthDomainServiceDataService.DetailsClass.__StudyIndicators_All_CanExecute,
                    global::LightSwitchApplication.MarketSynthDomainServiceDataService.DetailsClass.__StudyIndicators_All_Executing,
                    global::LightSwitchApplication.MarketSynthDomainServiceDataService.DetailsClass.__StudyIndicators_All_Executed,
                    global::LightSwitchApplication.MarketSynthDomainServiceDataService.DetailsClass.__StudyIndicators_All_Failed,
                    global::LightSwitchApplication.MarketSynthDomainServiceDataService.DetailsClass.__StudyIndicators_All_PreprocessQuery);
            private static bool __StudyIndicators_All_CanExecute(global::LightSwitchApplication.MarketSynthDomainServiceDataService d, bool r)
            {
                d.StudyIndicators_All_CanExecute(ref r);
                return r;
            }
            private static void __StudyIndicators_All_Executing(global::LightSwitchApplication.MarketSynthDomainServiceDataService d, object[] args)
            {
                d.StudyIndicators_All_Executing();
            }
            private static void __StudyIndicators_All_Executed(global::LightSwitchApplication.MarketSynthDomainServiceDataService d, object[] args)
            {
                d.StudyIndicators_All_Executed((global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.StudyIndicator>)args[0]);
            }
            private static void __StudyIndicators_All_Failed(global::LightSwitchApplication.MarketSynthDomainServiceDataService d, object[] args, global::System.Exception ex)
            {
                d.StudyIndicators_All_ExecuteFailed(ex);
            }
            private static global::System.Linq.IQueryable __StudyIndicators_All_PreprocessQuery(global::LightSwitchApplication.MarketSynthDomainServiceDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.StudyIndicator> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.StudyIndicator>)args[0];
                d.StudyIndicators_All_PreprocessQuery(ref query);
                return query;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.MarketSynthDomainServiceDataService, global::LightSwitchApplication.StudyIndicator>
                __GetStudyIndicatorEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.MarketSynthDomainServiceDataService, global::LightSwitchApplication.StudyIndicator>(
                    "GetStudyIndicator",
                    global::LightSwitchApplication.MarketSynthDomainServiceDataService.DetailsClass.__GetStudyIndicator_CanExecute,
                    global::LightSwitchApplication.MarketSynthDomainServiceDataService.DetailsClass.__GetStudyIndicator_Executing,
                    global::LightSwitchApplication.MarketSynthDomainServiceDataService.DetailsClass.__GetStudyIndicator_Executed,
                    global::LightSwitchApplication.MarketSynthDomainServiceDataService.DetailsClass.__GetStudyIndicator_Failed,
                    global::LightSwitchApplication.MarketSynthDomainServiceDataService.DetailsClass.__GetStudyIndicator_PreprocessQuery);
            private static bool __GetStudyIndicator_CanExecute(global::LightSwitchApplication.MarketSynthDomainServiceDataService d, bool r)
            {
                d.GetStudyIndicator_CanExecute(ref r);
                return r;
            }
            private static void __GetStudyIndicator_Executing(global::LightSwitchApplication.MarketSynthDomainServiceDataService d, object[] args)
            {
                d.GetStudyIndicator_Executing((string)args[0], (string)args[1]);
            }
            private static void __GetStudyIndicator_Executed(global::LightSwitchApplication.MarketSynthDomainServiceDataService d, object[] args)
            {
                d.GetStudyIndicator_Executed((string)args[0], (string)args[1], (global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.StudyIndicator>)args[2]);
            }
            private static void __GetStudyIndicator_Failed(global::LightSwitchApplication.MarketSynthDomainServiceDataService d, object[] args, global::System.Exception ex)
            {
                d.GetStudyIndicator_ExecuteFailed((string)args[0], (string)args[1], ex);
            }
            private static global::System.Linq.IQueryable __GetStudyIndicator_PreprocessQuery(global::LightSwitchApplication.MarketSynthDomainServiceDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.StudyIndicator> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.StudyIndicator>)args[2];
                d.GetStudyIndicator_PreprocessQuery((string)args[0], (string)args[1], ref query);
                return query;
            }
    
        }
    
        #endregion
    }
    
    #endregion
}
