//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]

namespace MarketSynthDomainServiceData.Implementation
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class MarketSynthDomainServiceDataObjectContext : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new MarketSynthDomainServiceDataObjectContext object using the connection string found in the 'MarketSynthDomainServiceDataObjectContext' section of the application configuration file.
        /// </summary>
        public MarketSynthDomainServiceDataObjectContext() : base("name=MarketSynthDomainServiceDataObjectContext", "MarketSynthDomainServiceDataObjectContext")
        {
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new MarketSynthDomainServiceDataObjectContext object.
        /// </summary>
        public MarketSynthDomainServiceDataObjectContext(string connectionString) : base(connectionString, "MarketSynthDomainServiceDataObjectContext")
        {
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new MarketSynthDomainServiceDataObjectContext object.
        /// </summary>
        public MarketSynthDomainServiceDataObjectContext(EntityConnection connection) : base(connection, "MarketSynthDomainServiceDataObjectContext")
        {
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<MarketData> MarketDatas
        {
            get
            {
                if ((_MarketDatas == null))
                {
                    _MarketDatas = base.CreateObjectSet<MarketData>("MarketDatas");
                }
                return _MarketDatas;
            }
        }
        private ObjectSet<MarketData> _MarketDatas;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Indicator> Indicators
        {
            get
            {
                if ((_Indicators == null))
                {
                    _Indicators = base.CreateObjectSet<Indicator>("Indicators");
                }
                return _Indicators;
            }
        }
        private ObjectSet<Indicator> _Indicators;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Study> Studies
        {
            get
            {
                if ((_Studies == null))
                {
                    _Studies = base.CreateObjectSet<Study>("Studies");
                }
                return _Studies;
            }
        }
        private ObjectSet<Study> _Studies;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<StudyIndicator> StudyIndicators
        {
            get
            {
                if ((_StudyIndicators == null))
                {
                    _StudyIndicators = base.CreateObjectSet<StudyIndicator>("StudyIndicators");
                }
                return _StudyIndicators;
            }
        }
        private ObjectSet<StudyIndicator> _StudyIndicators;

        #endregion
        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the MarketDatas EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMarketDatas(MarketData marketData)
        {
            base.AddObject("MarketDatas", marketData);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Indicators EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToIndicators(Indicator indicator)
        {
            base.AddObject("Indicators", indicator);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Studies EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToStudies(Study study)
        {
            base.AddObject("Studies", study);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the StudyIndicators EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToStudyIndicators(StudyIndicator studyIndicator)
        {
            base.AddObject("StudyIndicators", studyIndicator);
        }

        #endregion
    }
    

    #endregion
    
    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MarketSynthDomainServiceData", Name="Indicator")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Indicator : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Indicator object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        public static Indicator CreateIndicator(global::System.Guid id)
        {
            Indicator indicator = new Indicator();
            indicator.Id = id;
            return indicator;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Guid _Id;
        partial void OnIdChanging(global::System.Guid value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MarketSynthDomainServiceData", Name="MarketData")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class MarketData : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new MarketData object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="marketDate">Initial value of the MarketDate property.</param>
        /// <param name="open">Initial value of the Open property.</param>
        /// <param name="close">Initial value of the Close property.</param>
        /// <param name="high">Initial value of the High property.</param>
        /// <param name="low">Initial value of the Low property.</param>
        /// <param name="volume">Initial value of the Volume property.</param>
        public static MarketData CreateMarketData(global::System.Guid id, global::System.DateTime marketDate, global::System.Decimal open, global::System.Decimal close, global::System.Decimal high, global::System.Decimal low, global::System.Int64 volume)
        {
            MarketData marketData = new MarketData();
            marketData.Id = id;
            marketData.MarketDate = marketDate;
            marketData.Open = open;
            marketData.Close = close;
            marketData.High = high;
            marketData.Low = low;
            marketData.Volume = volume;
            return marketData;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Guid _Id;
        partial void OnIdChanging(global::System.Guid value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime MarketDate
        {
            get
            {
                return _MarketDate;
            }
            set
            {
                OnMarketDateChanging(value);
                ReportPropertyChanging("MarketDate");
                _MarketDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MarketDate");
                OnMarketDateChanged();
            }
        }
        private global::System.DateTime _MarketDate;
        partial void OnMarketDateChanging(global::System.DateTime value);
        partial void OnMarketDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Open
        {
            get
            {
                return _Open;
            }
            set
            {
                OnOpenChanging(value);
                ReportPropertyChanging("Open");
                _Open = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Open");
                OnOpenChanged();
            }
        }
        private global::System.Decimal _Open;
        partial void OnOpenChanging(global::System.Decimal value);
        partial void OnOpenChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Close
        {
            get
            {
                return _Close;
            }
            set
            {
                OnCloseChanging(value);
                ReportPropertyChanging("Close");
                _Close = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Close");
                OnCloseChanged();
            }
        }
        private global::System.Decimal _Close;
        partial void OnCloseChanging(global::System.Decimal value);
        partial void OnCloseChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal High
        {
            get
            {
                return _High;
            }
            set
            {
                OnHighChanging(value);
                ReportPropertyChanging("High");
                _High = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("High");
                OnHighChanged();
            }
        }
        private global::System.Decimal _High;
        partial void OnHighChanging(global::System.Decimal value);
        partial void OnHighChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Low
        {
            get
            {
                return _Low;
            }
            set
            {
                OnLowChanging(value);
                ReportPropertyChanging("Low");
                _Low = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Low");
                OnLowChanged();
            }
        }
        private global::System.Decimal _Low;
        partial void OnLowChanging(global::System.Decimal value);
        partial void OnLowChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 Volume
        {
            get
            {
                return _Volume;
            }
            set
            {
                OnVolumeChanging(value);
                ReportPropertyChanging("Volume");
                _Volume = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Volume");
                OnVolumeChanged();
            }
        }
        private global::System.Int64 _Volume;
        partial void OnVolumeChanging(global::System.Int64 value);
        partial void OnVolumeChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MarketSynthDomainServiceData", Name="Study")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Study : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Study object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="indicatorId">Initial value of the IndicatorId property.</param>
        public static Study CreateStudy(global::System.Guid id, global::System.Guid indicatorId)
        {
            Study study = new Study();
            study.Id = id;
            study.IndicatorId = indicatorId;
            return study;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Guid _Id;
        partial void OnIdChanging(global::System.Guid value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String InstrumentName
        {
            get
            {
                return _InstrumentName;
            }
            set
            {
                OnInstrumentNameChanging(value);
                ReportPropertyChanging("InstrumentName");
                _InstrumentName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("InstrumentName");
                OnInstrumentNameChanged();
            }
        }
        private global::System.String _InstrumentName;
        partial void OnInstrumentNameChanging(global::System.String value);
        partial void OnInstrumentNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid IndicatorId
        {
            get
            {
                return _IndicatorId;
            }
            set
            {
                OnIndicatorIdChanging(value);
                ReportPropertyChanging("IndicatorId");
                _IndicatorId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IndicatorId");
                OnIndicatorIdChanged();
            }
        }
        private global::System.Guid _IndicatorId;
        partial void OnIndicatorIdChanging(global::System.Guid value);
        partial void OnIndicatorIdChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MarketSynthDomainServiceData", Name="StudyIndicator")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class StudyIndicator : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new StudyIndicator object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        public static StudyIndicator CreateStudyIndicator(global::System.Guid id)
        {
            StudyIndicator studyIndicator = new StudyIndicator();
            studyIndicator.Id = id;
            return studyIndicator;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Guid _Id;
        partial void OnIdChanging(global::System.Guid value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Label
        {
            get
            {
                return _Label;
            }
            set
            {
                OnLabelChanging(value);
                ReportPropertyChanging("Label");
                _Label = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Label");
                OnLabelChanged();
            }
        }
        private global::System.String _Label;
        partial void OnLabelChanging(global::System.String value);
        partial void OnLabelChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PointData
        {
            get
            {
                return _PointData;
            }
            set
            {
                OnPointDataChanging(value);
                ReportPropertyChanging("PointData");
                _PointData = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PointData");
                OnPointDataChanged();
            }
        }
        private global::System.String _PointData;
        partial void OnPointDataChanging(global::System.String value);
        partial void OnPointDataChanged();

        #endregion
    
    }

    #endregion
    
}
